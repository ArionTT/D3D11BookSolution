//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer ConstBufferScene
{
    DirectLight gDirectLight;           // Offset:    0, size:   60
    float3  gViewPos;                   // Offset:   64, size:   12
    float   gDeltaTime;                 // Offset:   76, size:    4
    float4x4 MATRIX_W;                  // Offset:   80, size:   64
}

cbuffer ConstBufferObject
{
    float4x4 MATRIX_M;                  // Offset:    0, size:   64
    float4x4 MATRIX_V;                  // Offset:   64, size:   64
    float4x4 MATRIX_P;                  // Offset:  128, size:   64
    float4x4 MATRIX_VP;                 // Offset:  192, size:   64
    float4x4 MATRIX_MVP;                // Offset:  256, size:   64
    Material OBJECT_MAT;                // Offset:  320, size:   48
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 shape
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer ConstBufferObject
                // {
                //
                //   float4x4 MATRIX_M;                 // Offset:    0 Size:    64
                //   float4x4 MATRIX_V;                 // Offset:   64 Size:    64 [unused]
                //   float4x4 MATRIX_P;                 // Offset:  128 Size:    64 [unused]
                //   float4x4 MATRIX_VP;                // Offset:  192 Size:    64 [unused]
                //   float4x4 MATRIX_MVP;               // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //
                //   } OBJECT_MAT;                      // Offset:  320 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ConstBufferObject                 cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 1   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 25 "D:\HLSL Project\IntroductionToD3D11\D3D11BookSolution\SimpleRenderFrame\hlsl\shape.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[16].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[17].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[18].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[19].xyzw  // o<3:NaN:Inf>
                dp3 r0.x, v1.xyzx, cb0[0].xyzx  // o<4:NaN:Inf>
                dp3 r0.y, v1.xyzx, cb0[1].xyzx  // o<5:NaN:Inf>
                dp3 r0.z, v1.xyzx, cb0[2].xyzx  // o<6:NaN:Inf>
                dp3 r2.x, v0.xyzx, cb0[0].xyzx  // o<7:NaN:Inf>
                dp3 r2.y, v0.xyzx, cb0[1].xyzx  // o<8:NaN:Inf>
                dp3 r2.z, v0.xyzx, cb0[2].xyzx  // o<9:NaN:Inf>
                mov r3.xy, v2.xyxx  // o<10,11>
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r0.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // VS<10,11>
                ret 
                // Approximately 18 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer ConstBufferScene
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 dir;                    // Offset:   48
                //
                //   } gDirectLight;                    // Offset:    0 Size:    60
                //   float3 gViewPos;                   // Offset:   64 Size:    12
                //   float gDeltaTime;                  // Offset:   76 Size:     4 [unused]
                //   float4x4 MATRIX_W;                 // Offset:   80 Size:    64
                //
                // }
                //
                // cbuffer ConstBufferObject
                // {
                //
                //   float4x4 MATRIX_M;                 // Offset:    0 Size:    64 [unused]
                //   float4x4 MATRIX_V;                 // Offset:   64 Size:    64 [unused]
                //   float4x4 MATRIX_P;                 // Offset:  128 Size:    64 [unused]
                //   float4x4 MATRIX_VP;                // Offset:  192 Size:    64 [unused]
                //   float4x4 MATRIX_MVP;               // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //
                //   } OBJECT_MAT;                      // Offset:  320 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ConstBufferScene                  cbuffer      NA          NA    0        1
                // ConstBufferObject                 cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 1   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[9], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 34 "D:\HLSL Project\IntroductionToD3D11\D3D11BookSolution\SimpleRenderFrame\hlsl\shape.fx"
                dp3 r0.x, v1.xyzx, v1.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v1.xyzx  // WorldNormal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, cb0[3].xyzx
                mov r1.w, l(0)
                dp4 r2.x, r1.xyzw, cb0[5].xyzw
                dp4 r2.y, r1.xyzw, cb0[6].xyzw
                dp4 r2.z, r1.xyzw, cb0[7].xyzw
                dp4 r2.w, r1.xyzw, cb0[8].xyzw
                dp4 r0.w, r2.xyzw, r2.xyzw
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r2.xyzx  // LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r1.xyzx
                dp3 r0.w, r2.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r3.xyz, r0.wwww, r0.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // ReflectDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, -v2.xyzx
                add r3.xyz, r3.xyzx, cb0[4].xyzx
                dp3 r0.w, r3.xyzx, r3.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, r3.xyzx  // ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.w, cb1[22].w  // gloss<0>
                mul r4.xyz, cb0[0].xyzx, cb1[20].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                mul r5.xyz, cb0[1].xyzx, cb1[21].xyzx
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)
                mul r0.xyz, r0.xxxx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, cb0[2].xyzx, cb1[22].xyzx
                dp3 r1.w, r2.xyzx, r3.xyzx
                max r1.w, r1.w, l(0.000000)
                log r1.w, r1.w
                mul r0.w, r0.w, r1.w
                exp r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx
                add o0.xyz, r1.xyzx, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, l(1.000000)  // PS<3: 1f>
                ret 
                // Approximately 44 instruction slots used
                            
            };
        }

    }

}

